(begin (define + #prim_add) 
(define - #prim_sub) 
(define * #prim_mult) 
(define / #prim_div) 
(define = #prim_eq) 
(define cons (lambda (car cdr) (lambda (c) (if (= c 'car) car (if (= c 'cdr) cdr '#f)))))
(define car (lambda (pair) (pair 'car))) 
(define cdr (lambda (pair) (pair 'cdr)))

(define bottles (lambda (n) (if (= n 0) (display "No more bottles") (begin (display n) (display " bottles of beer")))))
(define beer (lambda (n) (if (= n 0) 'done (begin (bottles n) (display " on the wall") (bottles n) (display "Take one down pass it around") (bottles (- n 1)) (display " on the wall") (beer (- n 1)))))))
